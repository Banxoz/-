//Общее задание
#include <iostream>
#include <Windows.h> 
using namespace std;
void bub(int* arr, int size) {
    for (int i = 0; i < size - 1; ++i) {
        bool flag = false;
        for (int j = 0; j < size - i - 1; ++j) {
            if (arr[j] > arr[j + 1]) {
                swap(arr[j], arr[j + 1]);
                flag = true;
            }
        }
        if (!flag) break;
    }
}
int del3(const int* arr, int size) {
    int cout = 0;
    for (int i = 0; i < size; ++i) {
        if (arr[i] % 3 == 0) ++cout;
    }
    return cout;
}
int* minotr(int* arr, int size) {
    int* otr = nullptr;

    for (int i = 0; i < size; ++i) {
        if (arr[i] < 0) {
            if (otr == nullptr || arr[i] < *otr) {
                otr = &arr[i];
            }
        }
    }

    return otr;
}

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    int size;
    cout << "Введите размер массива: ";
    cin >> size;

    int* arr = new int[size];

    cout << "Введите элементы массива:\n";
    for (int i = 0; i < size; ++i) {
        cin >> arr[i];
    }

    bub(arr, size);

    cout << "Отсортированный массив:\n";
    for (int i = 0; i < size; ++i) {
        cout << arr[i] << " ";
    }
    cout << endl;

    int nemei = del3(arr, size);
    cout << "Количество элементов, кратных 3: " << nemei << endl;
    int* mineg = minotr(arr, size);
    if (mineg != nullptr) {
        cout << "Минимальный отрицательный элемент: " << *mineg
            << " (находится по адресу: " << mineg << endl;
    }
    else {
        cout << "В массиве нет отрицательных элементов."<< endl;
    }
    delete[] arr;
    return 0;
}

   #include <iostream>
#include <random>
#include <Windows.h> 
using namespace std;

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    int M, N, K1, K2;

    // Ввод размеров
    cout << "Введите количество строк M: ";
    cin >> M;
    cout << "Введите количество столбцов N: ";
    cin >> N;
    cout << "Введите номера столбцов K1 и K2 (1 <= K1 < K2 <= N): ";
    cin >> K1 >> K2;

    if (K1 < 1 || K2 > N || K1 >= K2) {
        cerr << "Ошибка: неверные номера столбцов!" << endl;
        return 1;
    }
    int** matrix = new int* [M];
    for (int i = 0; i < M; ++i) {
        matrix[i] = new int[N];
    }

    //random_device rd;
    //mt19937 gen(rd());
    //uniform_int_distribution<> dis(1, 100);
    srand((5));
    int gen=rand()%100;

    // Заполнение матрицы
    for (int i = 0; i < M; ++i) {
        for (int j = 0; j < N; ++j) {
            matrix[i][j] =gen;
        }
    }

    cout << "\nИсходная матрица:" << endl;
    for (int i = 0; i < M; ++i) {
        for (int j = 0; j < N; ++j) {
            cout  << ' ' << matrix[i][j];
        }
        cout << endl;
    }

    for (int i = 0; i < M; ++i) {
        swap(matrix[i][K1 - 1], matrix[i][K2 - 1]);
    }

    cout << "\nМатрица после обмена столбцов " << K1 << " и " << K2 << ":\n";
    for (int i = 0; i < M; ++i) {
        for (int j = 0; j < N; ++j) {
            cout <<" " << matrix[i][j];
        }
        cout << endl;
    }

    delete[] matrix;

    return 0;
}
